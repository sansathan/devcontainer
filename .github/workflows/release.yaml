name: Release
on:
  workflow_dispatch:
    inputs:
      images:
        type: string
        description: "Image to release"
        required: true
      version:
        description: "Version to release"
        required: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set matrix
        id: set-matrix
        run: |
          images="${{ github.event.inputs.images }}"
          # Convert comma-separated string to JSON array
          matrix=$(echo "$images" | tr ',' '\n' | jq -R -s -c 'split("\n") | map(select(. != ""))')
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  release:
    needs: prepare
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        image: ${{ fromJson(needs.prepare.outputs.matrix) }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
      - name: Pre-build dev container image
        uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/${{ github.repository }}-${{ matrix.image }}
          imageTag: ${{ github.event.inputs.version }}
          push: always
          subFolder: src/${{ matrix.image }}
          platform: linux/amd64,linux/arm64
      - name: Set matrix output
        id: set-matrix
        run: echo "matrix=${{ needs.prepare.outputs.matrix }}" >> $GITHUB_OUTPUT

  release-base:
    needs: release
    runs-on: ubuntu-24.04-arm
    if: contains(needs.release.outputs.matrix, 'base')
    strategy:
      matrix:
        image:
          - bun
          - go
          - node
          - rust
          - svelte
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
      - name: Pre-build base container image
        uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/${{ github.repository }}-${ matrix.image }
          imageTag: ${{ github.event.inputs.version }}
          push: always
          subFolder: src/${ matrix.image }
          platform: linux/amd64,linux/arm64
